all data base have a the same department of products(Skin Care) and same category (Face Masks)

-----DESCTIPTION-OF-THE-DATABASE----

Store: ------------ Магазин, де продається продукт.
Date: ------------  Дата покупки.
Weekly_Sales: ----- Продажі за тиждень.
Holiday_Flag: ----- Вихідні дні.
Temperature: ------ Температура в регіоні.
Fuel_Price: ------- Ціна пального.
CPI: -------------- Індекс цін для клієнтів.
Unemployment: ----- Рівень безробіття в регіоні.
PRODUCT_NAME: ----- Назва продукту.
DEPARTMENT: ------- Відділ продукту.
CATEGORY: --------- Категорія продукту.
SKU: -------------- Ідентифікатор продукту.
SELLER: ----------- Продавець товару.
BRAND: ------------ Бренд продукту.
PRICE_CURRENT: ---- Поточна ціна.
PRICE_RETAIL: ----- Роздрібна ціна.
REVIEW_COUNT: ----- Кількість відгуків.
REVIEW_RATING: ---- Рейтинг відгуків.
RunDate: ---------- Дата збору даних.

Data types of all columns in DATABASE

Data columns (total 19 columns):
 #   Column         Non-Null Count  Dtype         
---  ------         --------------  -----         
 0   Store          1130 non-null   int64         
 1   Date           1130 non-null   datetime64[ns]
 2   Weekly_Sales   1130 non-null   float64       
 3   Holiday_Flag   1130 non-null   int64         
 4   Temperature    1130 non-null   float64       
 5   Fuel_Price     1130 non-null   float64       
 6   CPI            1130 non-null   float64       
 7   Unemployment   1130 non-null   float64       
 8   PRODUCT_NAME   1130 non-null   object        
 9   DEPARTMENT     1130 non-null   object        
 10  CATEGORY       1130 non-null   object        
 11  SKU            1130 non-null   int64         
 12  SELLER         1130 non-null   object        
 13  BRAND          1130 non-null   object        
 14  PRICE_CURRENT  1130 non-null   float64       
 15  PRICE_RETAIL   1130 non-null   float64       
 16  REVIEW_COUNT   1130 non-null   int64         
 17  REVIEW_RATING  1130 non-null   float64       
 18  RunDate        1130 non-null   datetime64[ns]
dtypes: datetime64[ns](2), float64(8), int64(4), object(5)
memory usage: 167.9+ KB


1 - як змінюються продажі з часом
- спочатку визначити найбільні і найменші продажі, тобто від медіани в конкретному сезоні подивитись в різні сторони
        тоді на основі сезонів показати що:
        якщо значення більше за медіану то продажі зросли,
        в тому випадку якщо значення меньше за медіану то продажі знизились

!!!     Цей аналіз можна зробити на основі даних про DATE, WEEKLY_SALES та HOLIDAY_FLAG
- для початку: перевести дату в формат дати
- потім знайти медіану продаж від нього буде відраховуватися:
        якщо число більше, то продажі зросли
        якщо число меньше то продажі знизились
- також добавити виняток:
        якщо є святкові дні за датою, перевірити наскільки продажі зростають у порівняння з звичайними днями
        у межах конкретного сезону(тобто тут ми вже припускаємо що показники будуть зростати,
        перевірити за допомогою тестів: z-test, t-test)

- перевірити якщо є святкові дні в певному сезоні, перевірити чи мають вони вплив
  на збільшення продажів(яки відсоток прибутку вони становлять і як це вливає на продажі)


'''Перевести дату в формат дати:
Використовуємо функцію pd.to_datetime для переведення колонки Date в формат дати, щоб зручніше працювати з сезонними та часовими даними.

Додати сезон до таблиці:
    Створюємо нову колонку Season, яка визначається на основі місяця з дати, що дозволяє розділяти дані на чотири сезони: Зима, Весна, Літо, Осінь. Це дасть змогу аналізувати дані по кожному сезону окремо.

Обчислити медіану продажів для кожного сезону:
    За допомогою groupby по колонці Season, обчислюємо медіану продажів Weekly_Sales для кожного сезону. Це допомагає нам порівнювати поточні продажі з базовими для кожного сезону.

Обчислити загальні продажі для кожного сезону:
    Після того, як медіана продажів для кожного сезону обчислена, підраховуємо загальний обсяг продажів за кожен сезон, що дозволяє оцінити загальний результат для кожного сезону.

Перевірити наявність святкових днів:
    Створюємо функцію, яка перевіряє, чи є в даних святкові дні (позначені Holiday_Flag = 1) і порівнює ці дані з не святковими днями. Це дозволяє оцінити, як святкові дні впливають на обсяги продажів.

Визначити вплив святкових днів на прибуток:
    Для кожного сезону обчислюємо, яку частку від загальних продажів складають святкові продажі. Це дозволяє оцінити, наскільки сильно святкові дні впливають на загальний прибуток.

Тестування з використанням t-тесту:
    Виконуємо t-тест для порівняння продажів між святковими та не святковими днями. Це дозволяє статистично оцінити, чи є значущі відмінності в продажах між святковими та звичайними днями для кожного сезону.

Вивести результат:
    Для кожного сезону виводимо інформацію про частку святкових продажів, вплив святкових днів на прибуток і результати t-тесту (t-статистика та p-значення).'''




  2
  Які продукти продаються найкраще?
 Колонки з якими будемо працювати: - PRODUCT_NAME, Weekly_Sales, BRAND, Store, Season
 - Щоб дізнатися які продукти продаються найкраще в який сезон: PRODUCT_NAME, Weekly_Sales, Season
 - які бренди найчастіше купують, які продукти цих брендів є складають вичсоку частку продажів в магазинах: BRAND, Weekly_Sales, Store
 - далі сортуємо товари які найбiльше купують(від найбфльш високої кількості продажу до низької) - створити колонку, з найбільшою кількістю продажів
 

3 
Які фактори впливають на продажі?
Колонки з якими будемо працювати: Unemployment, BRAND, Wekkly_Sales, Temperature
 - Чи впливає рівень безробіття на продажі?
 - Чи впливає температура в регіоні на продажі?
 - Чи впливає сезон на продажі конкретного товару?